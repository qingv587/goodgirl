# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-24 07:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标题')),
                ('summary', models.TextField(verbose_name='简介')),
                ('up', models.IntegerField(default=0, verbose_name='赞')),
                ('down', models.IntegerField(default=0, verbose_name='踩')),
                ('create_time', models.DateTimeField(verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='个性签名')),
                ('site', models.CharField(max_length=32, verbose_name='后缀')),
            ],
        ),
        migrations.CreateModel(
            name='Catagory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='分类')),
                ('site', models.CharField(max_length=32, verbose_name='分类后缀')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论')),
                ('create_time', models.DateTimeField(verbose_name='创建时间')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Article')),
                ('parent', models.ManyToManyField(to='app01.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='文章内容')),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app01.Article')),
            ],
        ),
        migrations.CreateModel(
            name='PersonCatagory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='个人分类')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Blog')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标签')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Blog')),
            ],
        ),
        migrations.CreateModel(
            name='Tag2Aticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aticle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='User2User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('nickname', models.CharField(max_length=32, verbose_name='昵称')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('img', models.FileField(upload_to='', verbose_name='头像')),
                ('fans', models.ManyToManyField(through='app01.User2User', to='app01.UserInfo', verbose_name='粉丝们')),
            ],
        ),
        migrations.AddField(
            model_name='user2user',
            name='user1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='app01.UserInfo'),
        ),
        migrations.AddField(
            model_name='user2user',
            name='user2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fan', to='app01.UserInfo'),
        ),
        migrations.AddField(
            model_name='blog',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo'),
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Blog'),
        ),
        migrations.AddField(
            model_name='article',
            name='catagory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Catagory'),
        ),
        migrations.AddField(
            model_name='article',
            name='personcatagory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.PersonCatagory'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(to='app01.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='user2user',
            unique_together=set([('user1', 'user2')]),
        ),
        migrations.AlterUniqueTogether(
            name='tag2aticle',
            unique_together=set([('aticle', 'tag')]),
        ),
    ]
